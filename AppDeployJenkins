            
pipeline {
    agent any

    environment {
        PLATFORM = 'linux_amd64'        
        BIN_PATH = '/var/lib/jenkins/.local/bin'
    }

    stages {        
       
        stage('Install kubectl') {
            steps {            
                // need to add a check to see if the file exists before installing, or check version against latest version                
                // need to change this to use jenkins agents (containers) instead of the master node
                echo "Installing eksctl"
                sh 'curl -O "https://s3.us-west-2.amazonaws.com/amazon-eks/1.33.0/2025-05-01/bin/linux/amd64/kubectl"'
                sh 'chmod +x ./kubectl'                                   
                sh 'mkdir -p ~/.local/bin'                
                sh 'mv ./kubectl ~/.local/bin/kubectl'                                     
                echo "Getting kubectl version"                
                sh '${BIN_PATH}/kubectl version --client=true'                       
            }
        }
        stage('Install eksctl') {
            steps {
                script {
                    // need to add a check to see if the file exists before installing, or check version against latest version
                    // need to change this to use jenkins agents (containers) instead of the master node                    
                    echo "Installing eksctl"
                    sh 'curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_${PLATFORM}.tar.gz"'                          
                    sh 'tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz'
                    sh 'mv /tmp/eksctl ~/.local/bin/eksctl'                    
                    echo "Getting eksctl version"
                    sh '${BIN_PATH}/eksctl version'

                }                
            }
        }             
        stage('deploy appl to K8s') {
            steps {
                    echo "deploy App"
                    sh '${BIN_PATH}/kubectl apply -f mario-pod.yaml'                          
                    sh '${BIN_PATH}/kubectl describe pod supermario-pod-capstone'
                    sh '${BIN_PATH}/kubectl expose pod supermario-pod-capstone --type=LoadBalancer --name=supermario-svc --port=80 --target-port=8080'
                    sh '${BIN_PATH}/kubectl get service'
           }
        }
    }    
}